<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
    <!-- 3.0以前不配可能会报错
    <import resource="classpath:META-INF/cxf/cxf-extension-http.xml" />
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />-->
<!--    两种方式定义webservice服务，相当于发布-->
    <bean id="newsServerImpl" class="com.study.NewsServerImpl"></bean>
    <jaxws:endpoint id="newsServer" implementor="#newsServerImpl" address="/news" />

    <jaxws:server id="MyServer" address="/weather" serviceClass="com.study.WeatherServer">
        <jaxws:serviceBean><bean class="com.study.WeatherServerImpl"></bean></jaxws:serviceBean>
    </jaxws:server>

<!--    jaxrs   发布restful接口 -->
    <jaxrs:server id="studentService" address="/studentService">
        <!-- 消息拦截器 -->
        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
        </jaxrs:outInterceptors>
        <jaxrs:serviceBeans><bean class="com.study.StudentServiceImpl" /></jaxrs:serviceBeans>
        <!-- 支持的协议 -->
        <jaxrs:extensionMappings>
            <entry key="json" value="application/json" />
            <entry key="xml"  value="application/xml" />
        </jaxrs:extensionMappings>
        <!-- 编码格式 -->
        <jaxrs:languageMappings>
<!--            <entry key="en" value="en-gb"/>-->
            <entry key="charset" value="utf-8"/>
        </jaxrs:languageMappings>
<!--json转换器-->
        <jaxrs:providers>
<!-- 特别注意2.5版本的是JSONProvider 而3.0版本后好像找不到这个类 <bean class="org.apache.cxf.jaxrs.provider.json.JsonMapObjectProvider"></bean>-->
<!--            很多jar包里都有provider,随你挑 一下两个provider分别对应mpperf和mapperc-->
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <property name="mapper" ref="mapperf"></property>
            </bean>
<!--            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">-->
<!--                <property name="mapper" ref="mapperc"></property>-->
<!--            </bean>-->
            <!-- 用于从json串中获取的字符串，转化成Date类型
            serializationInclusion
            <bean id="dateHandler" class="com.goldenvista.scaffold.utils.date.DateParameterHandler">
                <property name="format" value="yyyy-MM-dd"></property>
            </bean>
            　　&lt;!&ndash; 用于从json串中获取的字符串，转化成Date类型 &ndash;&gt;
            <bean id="dateTimeHandler" class="com.goldenvista.scaffold.utils.date.DateParameterHandler">
                <property name="format" value="yyyy-MM-dd HH:mm:ss"></property>
            </bean>-->
        </jaxrs:providers>
    </jaxrs:server>
<!--    <bean id="mapperc" class="org.codehaus.jackson.map.ObjectMapper">-->
<!--        <property name="dateFormat">-->
<!--            <bean class="java.text.SimpleDateFormat">-->
<!--                <constructor-arg value="yyyy-MM-dd HH:mm:ss"/>-->
<!--            </bean>-->
<!--        </property>-->
<!--        <property name="serializationConfig.serializationInclusion" value="NON_NULL"></property>-->
<!--    </bean>-->
        <bean id="mapperf" class="com.fasterxml.jackson.databind.ObjectMapper">
            <property name="dateFormat">
                <bean class="java.text.SimpleDateFormat">
                    <constructor-arg value="yyyy-MM-dd HH:mm:ss"/>
                </bean>
            </property>
        </bean>
</beans>